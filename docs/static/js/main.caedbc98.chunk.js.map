{"version":3,"sources":["services/ApiFetch.js","services/LocalStorage.js","images/RickAndMorty.png","components/CharacterCard.js","images/portal.gif","components/NoResults.js","components/CharacterList.js","components/CharacterDetail.js","images/existNot.gif","components/NoCharacterDetail.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","images/silvia.ico","components/Footer.js","components/Reset.js","components/App.js","index.js"],"names":["ApiFetch","fetch","then","response","json","data","results","map","character","id","image","name","status","species","origin","episode","length","LocalStorage","get","key","defaultData","localStorage","getItem","JSON","parse","set","value","setItem","stringify","CharacterCard","props","className","src","alt","NoResults","filterName","portal","CharacterList","characters","to","CharacterDetail","NoCharacterDetail","existNot","FilterByName","htmlFor","placeholder","type","lsFilter","onChange","ev","handleFilter","searchValue","target","FilterBySpecies","specieValue","Filters","onSubmit","preventDefault","FilterName","Footer","silvia","Reset","onClick","reset","App","localCharacter","ls","localSearchName","localSearchSpecie","useState","setCharacters","setFilterByName","FilterSpecie","setFilterSpecie","useEffect","orderCharacter","sort","a","b","renderFilter","filter","toUpperCase","includes","logo","exact","path","characterData","render","routerProps","routerId","match","params","characterFound","find","parseInt","console","log","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.caedbc98.chunk.js","sourcesContent":["const urlFetch = \"https://rickandmortyapi.com/api/character\";\r\n\r\nconst ApiFetch = () => {\r\n  return fetch(urlFetch)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          episode: character.episode.length,\r\n        };\r\n      });\r\n\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default ApiFetch;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst LocalStorage = { get: get, set: set };\r\n\r\nexport default LocalStorage;\r\n","export default __webpack_public_path__ + \"static/media/RickAndMorty.1f3156d3.png\";","import PropTypes from \"prop-types\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <article className=\"character__li--article\">\r\n        <img\r\n          className=\"character__li--article-img\"\r\n          src={props.image}\r\n          alt={props.name}\r\n        />\r\n        <div className=\"character__li--article-info\">\r\n          <h2 className=\"character__li--article-info-name\">{props.name}</h2>\r\n          <p>{props.species}</p>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n\r\nCharacterCard.propTypes = {};\r\n","export default __webpack_public_path__ + \"static/media/portal.aeba5f34.gif\";","import portal from \"../images/portal.gif\";\r\n\r\nconst NoResults = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"noResults\">\r\n        <p className=\"noResults__text\">\r\n          Ops, <span className=\"noResults__text-input\">{props.filterName}</span>{\" \"}\r\n          is not in this dimension.\r\n        </p>\r\n        <img className=\"noResults__img\" src={portal} alt=\"Not found\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoResults;\r\n","import { Link } from \"react-router-dom\";\r\n//COMPONENTES\r\nimport CharacterCard from \"./CharacterCard.js\";\r\nimport NoResults from \"./NoResults.js\";\r\n\r\nconst CharacterList = (props) => {\r\n  if (props.characters.length === 0) {\r\n    return <NoResults filterName={props.filterName} />;\r\n  }\r\n  const character = props.characters.map((character) => {\r\n    return (\r\n      <li className=\"character__li\" key={character.id}>\r\n        <Link to={`/character/${character.id}`}>\r\n          <CharacterCard\r\n            image={character.image}\r\n            name={character.name}\r\n            species={character.species}\r\n          />\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"character\">{character}</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"detail\">\r\n        <Link to=\"/\" className=\"detail__back\">\r\n          <p className=\"detail__back\">â†© Volver</p>\r\n        </Link>\r\n        <article className=\"detail__article\">\r\n          <img\r\n            className=\"detail__article--img\"\r\n            src={props.character.image}\r\n            alt={props.character.name}\r\n          />\r\n          <div className=\"detail__article--info\">\r\n            <h2 className=\"detail__article--info-name\">\r\n              {props.character.name}\r\n            </h2>\r\n            <p className=\"detail__article--info-all\">\r\n              {props.character.species}\r\n            </p>\r\n            <p className=\"detail__article--info-all\">\r\n              Comes from {props.character.origin}\r\n            </p>\r\n            <p className=\"detail__article--info-all\">\r\n              It's {props.character.status}\r\n            </p>\r\n            <p className=\"detail__article--info-all\">\r\n              Has been in {props.character.episode} episodes\r\n            </p>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/existNot.2b0fa255.gif\";","import { Link } from \"react-router-dom\";\r\nimport existNot from \"../images/existNot.gif\";\r\n\r\nconst NoCharacterDetail = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/\">\r\n        <p className=\"noCharacterBack\">â†© Volver</p>\r\n      </Link>\r\n      <div className=\"noCharacter\">\r\n        <p className=\"noCharacter__text\">\r\n          This page does not exist...but do we?\r\n        </p>\r\n        <img className=\"noCharacter__img\" src={existNot} alt=\"error 404\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoCharacterDetail;\r\n","const FilterByName = (props) => {\r\n  const handleSearchBox = (ev) => {\r\n    props.handleFilter({\r\n      searchValue: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"searchBox\"></label>\r\n\r\n      <input\r\n        className=\"filter__form--textBox\"\r\n        placeholder=\"Rick\"\r\n        id=\"SearchBox\"\r\n        type=\"text\"\r\n        value={props.lsFilter}\r\n        onChange={handleSearchBox}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","const FilterBySpecies = (props) => {\r\n  const handleSpecie = (ev) => {\r\n    props.handleFilter({ specieValue: ev.target.value, key: \"specie\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filterSpecies\" className=\"filter__form--species\">\r\n        Specie\r\n      </label>\r\n      <select\r\n        id=\"filterSpecies\"\r\n        className=\"filter__form--select\"\r\n        name=\"filterSpecies\"\r\n        onChange={handleSpecie}\r\n      >\r\n        <option value=\"All\">All</option>\r\n        <option value=\"Alien\">Alien</option>\r\n        <option value=\"Human\">Human</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecies;\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"filter__form\" onSubmit={handleSubmit}>\r\n        <FilterByName\r\n          handleFilter={props.handleFilter}\r\n          lsFilter={props.FilterName}\r\n        />\r\n        <FilterBySpecies handleFilter={props.handleFilter} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/silvia.74fcf9ca.ico\";","import silvia from \"../images/silvia.ico\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__link\">by Silvia EspaÃ±a Gil</p>\r\n        <img className=\"footer__img\" src={silvia} alt=\"mini developer\" />\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const Reset = (props) => {\r\n  return (\r\n    <button className=\"filter__resetBut\" onClick={props.reset} type=\"button\">\r\n      Reset\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n//SERVICES\nimport ApiFetch from \"../services/ApiFetch.js\";\nimport ls from \"../services/LocalStorage.js\";\n//IMAGES\nimport logo from \"../images/RickAndMorty.png\";\n\n//COMPONENTS\nimport CharacterList from \"./CharacterList.js\";\nimport CharacterDetail from \"./CharacterDetail.js\";\nimport NoCharacterDetail from \"./NoCharacterDetail.js\";\nimport Filters from \"./Filters.js\";\nimport Footer from \"./Footer.js\";\nimport Reset from \"./Reset.js\";\n//STYLESHEETS\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n  const localCharacter = ls.get(\"character\", []);\n  const localSearchName = ls.get(\"Filter name:\", \"\");\n  const localSearchSpecie = ls.get(\"Filter specie:\", \"All\");\n\n  //ESTADOS\n  const [characters, setCharacters] = useState(localCharacter);\n  const [FilterName, setFilterByName] = useState(localSearchName);\n  const [FilterSpecie, setFilterSpecie] = useState(localSearchSpecie);\n\n  //FETCH\n\n  useEffect(() => {\n    if (localCharacter.length === 0) {\n      ApiFetch().then((character) => {\n        const orderCharacter = character.sort((a, b) =>\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n        );\n        setCharacters(orderCharacter);\n      });\n    }\n  }, [localCharacter]);\n\n  //LOCAL STORAGE\n\n  useEffect(() => {\n    ls.set(\"character\", characters);\n    ls.set(\"Filter name:\", FilterName);\n    ls.set(\"Filter specie;\", FilterSpecie);\n  });\n\n  //HANDLER FUNCTIONS\n\n  //Filter\n\n  const handleFilter = (characterData) => {\n    if (characterData.key === \"name\") {\n      setFilterByName(characterData.searchValue);\n    } else if (characterData.key === \"specie\") {\n      setFilterSpecie(characterData.specieValue);\n    }\n  };\n\n  //Reset\n  const handleReset = () => {\n    setFilterByName(\"\");\n  };\n\n  //RENDER FUNCTIONS\n\n  //Filter\n  const renderFilter = characters\n    .filter((character) => {\n      return character.name.toUpperCase().includes(FilterName.toUpperCase());\n    })\n    .filter((character) => {\n      if (FilterSpecie === \"All\") {\n        return true;\n      } else {\n        return character.species === FilterSpecie;\n      }\n    });\n\n  //Detail\n\n  const renderCharacterDetail = (routerProps) => {\n    const routerId = routerProps.match.params.id;\n    const characterFound = characters.find(\n      (character) => character.id === parseInt(routerId)\n    );\n    if (characterFound) {\n      console.log(characterFound);\n      return <CharacterDetail character={characterFound} />;\n    } else {\n      return <NoCharacterDetail />;\n    }\n  };\n\n  return (\n    <>\n      <header className=\"logo\">\n        <img className=\"logo__img\" src={logo} alt=\"Rick and Morty\" />\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"filter\">\n              <Reset reset={handleReset} />\n              <Filters handleFilter={handleFilter} lsFilter={FilterName} />\n            </div>\n            <CharacterList filterName={FilterName} characters={renderFilter} />\n          </Route>\n          <Route path=\"/character/:id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/App.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}